require_relative "../config/environment.rb"

class Student

  # Remember, you can access your database connection anywhere in this class
  #  with DB[:conn]
  attr_accessor :name, :grade
  attr_reader :id

  def initialize(id=nil, name, grade)
    @id = id
    @name = name
    @grade = grade
  end

  def self.create_table
    sql = <<-SQL
    CREATE TABLE students(id INTEGER PRIMARY KEY);
    SQL

    DB[:conn].execute(sql)

  end
  #
  def self.drop_table
    sql = <<-SQL
      DROP TABLE students;
    SQL

    DB[:conn].execute(sql)
  end

  def save
    if self.id
      self.update
    else
      sql = <<-SQL
        INSERT INTO students(name, grade) VALUES (?,?);
      SQL

      DB[:conn].execute(sql, self.name, self.grade)
      @id = DB[:conn].execute("SELECT last_insert_rowid() FROM students")[0][0]
    end
  end

  def update
    sql = <<-SQL
      UPDATE students SET name = ?, grade = ? WHERE id = ?;
    SQL

    DB[:conn].execute(sql, self.name, self.grade, self.id)

  end

  def self.create(name, grade)
     student = Student.new(name, grade)
     student.save
     student
   end

  # def self.new_from_db(array)
  #   new_student = Student.new
  #   new_student.id = array[0]
  #   new_student.name = array[1]
  #   new_student.grade = array[2]
  #   new_student
  # end

  def self.new_from_db(row)
    new_student = Student.new  # self.new is the same as running Song.new
    new_student.id = row[0]
    new_student.name =  row[1]
    new_student.grade = row[2]
    new_student  # return the newly created instance
  end

  def self.find_by_name(name)
    sql = <<-SQL
      SELECT * FROM students WHERE name = ?;
    SQL

    DB[:conn].execute(sql, name)
  end

  def update
    sql = <<-SQL
      UPDATE students SET name = ?, grade = ? WHERE id = ?;
    SQL

    DB[:conn].execute(sql, self.id, self.name, self.grade)
  end

end
